var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = CuTe","category":"page"},{"location":"#CuTe","page":"Home","title":"CuTe","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for CuTe.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [CuTe]","category":"page"},{"location":"#CuTe.ArrayEngine","page":"Home","title":"CuTe.ArrayEngine","text":"ArrayEngine{T, L} <: Engine{T} <: DenseVector{T}\n\nA owning vector of type T with length L. It is stack-allocated and mutable. It should behaves like a StaticStrideArray with from StrideArrays package.\n\nExamples\n\nfunction test_alloc()\n    x = ArrayEngine{Float32}(one, static(10))\n    GC.@preserve x begin sum(ViewEngine(x)) end\nend\n\n@test @allocated(test_alloc()) == 0\n\n\n\n\n\n","category":"type"},{"location":"#CuTe.CuTeArray","page":"Home","title":"CuTe.CuTeArray","text":"CuTeArray(engine::DenseVector, layout::Layout)\n\nCreate a CuTeArray from an engine and a layout. See also ArrayEngine and ViewEngine.\n\nExamples\n\njulia> slayout = @Layout (5, 2);\n\njulia> array_engine = ArrayEngine{Float32}(one, static(10));\n\njulia> CuTeArray(array_engine, slayout)\n5×2 CuTeArray{Float32, 2, ArrayEngine{Float32, 10}, Layout{2, Tuple{StaticInt{5}, StaticInt{2}}, Tuple{StaticInt{1}, StaticInt{5}}}} with indices static(1):static(5)×static(1):static(2):\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n\n\n\n\n\n","category":"type"},{"location":"#CuTe.ViewEngine","page":"Home","title":"CuTe.ViewEngine","text":"ViewEngine{T, P} <: Engine{T} <: DenseVector{T}\n\nA non-owning view of a memory buffer. P is the type of the pointer.\n\n\n\n\n\n","category":"type"},{"location":"#CuTe.coord_to_coord-Tuple{Tuple, Tuple, Tuple}","page":"Home","title":"CuTe.coord_to_coord","text":"Transoform a coordinate in one shape to a coordinate in another shape.\n\n\n\n\n\n","category":"method"},{"location":"#CuTe.@Layout","page":"Home","title":"CuTe.@Layout","text":"Layout(shape, stride=nothing)\n\nConstruct a static layout with the given shape and stride.\n\nArguments\n\nshape: a tuple of integers or a single integer\nstride: a tuple of integers, a single integer, GenColMajor or GenRowMajor\n\n\n\n\n\n","category":"macro"}]
}
